
//Accept a name from user and copy it into another string

include<stdio.h>

void main()
{ int i,j;

char str1[10],str2[10];

printf("enter name1");
scanf("%s",str1);

for(i=0;str1[i]!='\0';i++)
str2[i]=str1[i];

str2[i]='\0';
printf("%s",str2) ;

}

//Accept a name from user and reverse it and store in another string it into


#include<stdio.h>
int main()
{
char str[10],str2[10];
int i,j,k=0;
puts("enter name");
gets(str);

//i will give length of string
for(i=0;str[i]!='\0';i++);


//copy string in reverse order to another string
for(j=i-1;j>=0;j--)
str2[k++]=str[j];

str2[k]='\0';

printf("%s",str2);
}






//Accept a string from user and reverse original string.
#include<stdio.h>
#include<string.h>
int main()
{
char t;
int i,l;
char str[]="vita";
l=strlen(str);

for (i=0;i<l/2;i++)
 {
   t=str[i];
  str[i]=str[l-1-i];
  str[l-1-i]=t;
   }
printf("%d",str);
}




//append- accept  two name and append 1st string with the second one-- 
#include<stdio.h>
void main()
{ int i,j;
char str1[20],str2[10];

printf("enter name1");
scanf("%s",str1);//vita

printf("enter name2");//DAC
scanf("%s",str2);

for(i=0;str1[i]!='\0';i++);

for(j=0;str2[j]!='\0';j++)
str1[i++]=str2[j];

str1[i]='\0';
printf("%s",str1) ;//vitaDAC


}



//compare --accept two string and check both string are same or not


int main()
{ int i,flag=0;
 char str1[]="vita";
char str2[]="vina";

 if(strlen(str1)!=strlen(str2)) 
{  pf("not");
  return 0;}
 for(i=0;str1[i]!='\0';i++)
  {
   if(str1[i]!=str2[i])
    {
     flag=1;
     break;
     }
  }
  if(flag==0) 
  { printf("same"); 
   else 
    printf("not"); 
 } return 0;}




}






//Accept a name from user and check if it is pallandrom or not?-- 
#include<stdio.h>
#include<string.h>
int main()
{
char t;
int i,l,flag=0;
char str[]="nitin";
l=strlen(str);

for (i=0;i<l/2;i++)
 {
  if(str[i]!=str[l-1-i])
   {flag=1;break;}
  
   }

if(flag==0)
printf("string is pallandrom");

else
printf("String is not pallandrom");
getche();
}






//Accept a sentences from user and print all pallendrom string--
#include<stdio.h>
#include<string.h>
void check(char words[])
{int i, flag=0;
	int l=strlen(words);
	for (i=0;i<l/2;i++)
     {
   if(words[i]!=words[l-1-i])
    {flag=1;break;}
  
   }

if(flag==0)
printf("%s",words);



}
int main()
{
char words[50];
	int i,l,j=0;
char str[]="Mr. nitin welcome to vita.nitin helps in java.ketki helps in logic and logol";
l=strlen(str);
for(i=0;i<=l;i++)
{
  if(str[i]!=' '&&str[i]!='\0')
  {
  words[j++]=str[i];
    }
  else{
	  words[j]='\0';
  check(words);
  j=0;}
}


getche();
}





//Accept a sentences from user and print all words length wise descending order--
#include<stdio.h>
#include<string.h>

void sort(char str[20][20],int c)
{
	int i,j;
	char t[20];

	for(i=0;i<c-1;i++)
	{
		for (j = 0; j <c-1-i; j++)
		{
			if(strlen(str[j])<strlen(str[j+1]))
			{strcpy(t,str[j]);
			strcpy(str[j],str[j+1]);
			strcpy(str[j+1],t);
			
			}
		}	
	}

	for(i=0;i<c;i++)
		{
	
			printf("\n%s",str[i]);

	}



}
int main()
{

int l,i,j=0,k=0,c=0;
char str[100];
char words[30];
char t[20][20];
printf("enter sentences");
scanf("%[^\n]",str);

 l=strlen(str);
 for(i=0;i<=l;i++)
{
	 if(str[i]!=' '&&str[i]!='\0')
	 {
	 words[j++]=str[i];
	 
	 }
	 else
	 {c++;
	 words[j]='\0';
	 strcpy(t[k++],words);
	 j=0;
	 
  }
 }
	 sort(t,c);
	 getche();
	 return 0;
}
 







 
//Accept a number from user and find binay of that number and check if it is pallandrom or not---
void check(int arr[],int j)
{
	int i,flag=0;
	for(i=0;i<j/2;i++)
	{
		if(arr[i]!=arr[j-1-i])
		{flag=1; break;}
	
			
	}
	if(flag==0)
	{
	  for(i=0;i<j;i++)
		  printf("%d",arr[i]);
	
	
	}
	else
	{printf("binary number is not pallendrom");}

}

int main()
{

int i,j=0,r;
int arr[10];
int no=4;

while(no!=0)
{
  r=no%2;
  arr[j++]=r;
  no=no/2;
}
check(arr,j);
getche();
}








