#include<iostream>
using namespace std;
class Teacher
{
private:
		char *name;
		int age;
public:
		Teacher(char *name,int age)
		{
			this->name=new char[strlen(name)+1];
			strcpy(this->name,name);
			this->age=age;
		}
		char* getName()
		{
			return name;
		}
		int getAge()
		{
			return age;
		}
		~Teacher()
		{
			cout<<"Teacher is removed"<<endl;
			delete name;
		}
		void work()
		{
			cout<<"Teacher is working"<<endl;
		}
};

class Department
{
private:
    Teacher *teacher;
	char *dname;
public:
	Department(char *dname)
	{
		teacher=NULL;
		this->dname=new char[strlen(dname)+1];
		strcpy(this->dname,dname);
	}
	char* getDname()
	{
		return dname;
	}
	void addTeacher(Teacher &ref)
	{
		this->teacher=&ref;
	}
	void perform()
	{
		cout<<"inside "<<dname<<" ";
		teacher->work();
	}
	~Department()
	{
		    cout<<endl<<"Department is getting close"<<endl;
			delete dname;
	}
};
void main()
{
	Department *scienceDepartment=new Department("Science Department");
	Department *mathsDepartment=new Department("Maths Department");
	cout<<scienceDepartment->getDname()<<endl;
	cout<<mathsDepartment->getDname()<<endl;
	Teacher t1("Abc",35);
	cout<<t1.getName()<<"\t"<<t1.getAge()<<endl;
	mathsDepartment->addTeacher(t1);
	mathsDepartment->perform();
	cout<<"Lets close the maths department"<<endl;
	delete mathsDepartment;
	cout<<t1.getName()<<" still exists and can join some other department"<<endl;
	scienceDepartment->addTeacher(t1);
	scienceDepartment->perform();
	// ..... after some time ......
	delete scienceDepartment;
	cout<<t1.getName()<<" still exists and can join some other department"<<endl;
}