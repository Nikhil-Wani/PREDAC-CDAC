// upcasting is required for Late binding. It gives u advantage of maintenance.

#include<iostream>
using namespace std;
class Shape
{
	public:
		virtual void draw()
		{
		}
};
class Circle:public Shape
{
	public:
		void draw()
		{
			cout<<"Circle draw"<<endl;
		}
};
class Triangle:public Shape
{
	public:
		void draw()
		{
			cout<<"Triangle draw"<<endl;
		}
};

void perform(Shape *ptr)
{
	ptr->draw();
}

int main()
{
	perform(new Circle);
	perform(new Triangle);
}












